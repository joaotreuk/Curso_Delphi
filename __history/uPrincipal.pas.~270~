unit uPrincipal;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.Menus, uDTMConexao, Enter, uFrmAtualizaDB,
  uRelCategoria, uRelCliente, uRelFichaCliente, uRelProduto,
  uRelProdutoPorCategoria, uSelecionarData, uRelVendaPorData, uCadUsuario,
  uLogin, uAlterarSenha, mUsuarioLogado, Vcl.ComCtrls, Data.DB,
  ZAbstractRODataset, ZAbstractDataset, ZDataset, Vcl.ExtCtrls;

type
  TfrmPrincipal = class(TForm)
    mainPrincipal: TMainMenu;
    Cadastros1: TMenuItem;
    Movimentaes1: TMenuItem;
    Relatrios1: TMenuItem;
    Clientes1: TMenuItem;
    N1: TMenuItem;
    Categorias1: TMenuItem;
    Produtos1: TMenuItem;
    N2: TMenuItem;
    menuFechar: TMenuItem;
    Vendas1: TMenuItem;
    Clientes2: TMenuItem;
    N3: TMenuItem;
    Produtos2: TMenuItem;
    N4: TMenuItem;
    VendasporData1: TMenuItem;
    Categoria1: TMenuItem;
    FichadeClientes1: TMenuItem;
    ProdutosporCategoria1: TMenuItem;
    Usurios1: TMenuItem;
    AlterarSenha1: TMenuItem;
    N5: TMenuItem;
    sbPrincipal: TStatusBar;
    AesdeAcesso1: TMenuItem;
    UsuriosXAes1: TMenuItem;
    Panel3: TPanel;
    Panel1: TPanel;
    Panel2: TPanel;
    Panel4: TPanel;
    Panel5: TPanel;
    Panel6: TPanel;
    qryProdutos: TZQuery;
    dsProdutos: TDataSource;
    qryProdutosLabel: TWideStringField;
    qryProdutosValue: TFloatField;
    procedure menuFecharClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure Categorias1Click(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure Clientes1Click(Sender: TObject);
    procedure Produtos1Click(Sender: TObject);
    procedure Vendas1Click(Sender: TObject);
    procedure Categoria1Click(Sender: TObject);
    procedure Clientes2Click(Sender: TObject);
    procedure FichadeClientes1Click(Sender: TObject);
    procedure Produtos2Click(Sender: TObject);
    procedure ProdutosporCategoria1Click(Sender: TObject);
    procedure VendasporData1Click(Sender: TObject);
    procedure Usurios1Click(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure AlterarSenha1Click(Sender: TObject);
    procedure AesdeAcesso1Click(Sender: TObject);
    procedure UsuriosXAes1Click(Sender: TObject);
  private
    teclaEnter: TMREnter;
    procedure AtualizacaoBancoDados(aForm: TfrmAtualizaDB);
    procedure CriarForm(nomeFormulario: TFormClass);
  public
    { Public declarations }
  end;

var
  frmPrincipal: TfrmPrincipal;
  oUsuarioLogado: TUsuarioLogado;

implementation

{$R *.dfm}

uses uCadCategorias, uCadCliente, uCadProduto, uProVendas, ZDbcIntfs,
  cAtualizacaoBancoDeDados, cArquivoIni, uCadAcaoAcesso, cAcaoAcesso,
  uUsuarioVsAcoes, uTelaHeranca;

procedure TfrmPrincipal.Categoria1Click(Sender: TObject);
begin
  frmRelCategoria := TfrmRelCategoria.Create(Self);
  frmRelCategoria.relPrincipal.PreviewModal;
  frmRelCategoria.Release;
end;

procedure TfrmPrincipal.Categorias1Click(Sender: TObject);
begin
  CriarForm(TfrmCadCategorias);
end;

procedure TfrmPrincipal.Clientes1Click(Sender: TObject);
begin
  CriarForm(TfrmCliente);
end;

procedure TfrmPrincipal.Clientes2Click(Sender: TObject);
begin
  frmRelCliente := TfrmRelCliente.Create(Self);
  frmRelCliente.relPrincipal.PreviewModal;
  frmRelCliente.Release;
end;

procedure TfrmPrincipal.FichadeClientes1Click(Sender: TObject);
begin
  frmRelFichaCliente := TfrmRelFichaCliente.Create(Self);
  frmRelFichaCliente.relPrincipal.PreviewModal;
  frmRelFichaCliente.Release;
end;

procedure TfrmPrincipal.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  FreeAndNil(teclaEnter);
  FreeAndNil(dtmConexao);

  if Assigned(oUsuarioLogado) then FreeAndNil(oUsuarioLogado);
end;

procedure TfrmPrincipal.FormCreate(Sender: TObject);
begin
  if not FileExists(TArquivoIni.ArquivoIni) then
  begin
      TArquivoIni.AtualizarIni('SERVER', 'TipoBancoDeDados', 'MSSQL');
      TArquivoIni.AtualizarIni('SERVER', 'NomeHost', 'DESKTOP-BLHGJR3');
      TArquivoIni.AtualizarIni('SERVER', 'Porta', '1433');
      TArquivoIni.AtualizarIni('SERVER', 'Usuario', 'Joao');
      TArquivoIni.AtualizarIni('SERVER', 'Senha', '1234');
      TArquivoIni.AtualizarIni('SERVER', 'BancoDeDados', 'Curso_Delphi');
  end;

  frmAtualizaDB := TfrmAtualizaDB.Create(Self);
  frmAtualizaDB.Show;
  frmAtualizaDB.Refresh;

  dtmConexao := TdtmConexao.Create(Self);

  with dtmConexao.zcConexao do
  begin
    Connected := False;
    SQLHourGlass := True;

    if TArquivoIni.LerIni('SERVER', 'TipoBancoDeDados') = 'MSSQL' then
      Protocol := 'mssql';

    LibraryLocation := 'D:\GitHub\Delphi\Curso_Delphi\ntwdblib.dll';
    HostName := TArquivoIni.LerIni('SERVER', 'NomeHost');
    Port := StrToInt(TArquivoIni.LerIni('SERVER', 'Porta'));
    User := TArquivoIni.LerIni('SERVER', 'Usuario');
    Password := TArquivoIni.LerIni('SERVER', 'Senha');
    Database := TArquivoIni.LerIni('SERVER', 'BancoDeDados');
    AutoCommit := True;
    TransactIsolationLevel := tiReadCommitted;
    Connected := True;
  end;

  AtualizacaoBancoDados(frmAtualizaDB);

  TAcaoAcesso.CriarAcoes(TfrmCadCategorias, dtmConexao.zcConexao);
  TAcaoAcesso.CriarAcoes(TfrmCliente, dtmConexao.zcConexao);
  TAcaoAcesso.CriarAcoes(TfrmCadProduto, dtmConexao.zcConexao);
  TAcaoAcesso.CriarAcoes(TfrmCadUsuario, dtmConexao.zcConexao);
  TAcaoAcesso.CriarAcoes(TfrmCadAcaoAcesso, dtmConexao.zcConexao);
  TAcaoAcesso.CriarAcoes(TfrmAlterarSenha, dtmConexao.zcConexao);
  TAcaoAcesso.CriarAcoes(TfrmProVenda, dtmConexao.zcConexao);
  TAcaoAcesso.CriarAcoes(TfrmRelVendaPorData, dtmConexao.zcConexao);
  TAcaoAcesso.CriarAcoes(TfrmRelFichaCliente, dtmConexao.zcConexao);
  TAcaoAcesso.CriarAcoes(TfrmRelCliente, dtmConexao.zcConexao);
  TAcaoAcesso.CriarAcoes(TfrmRelProdutoPorCateg, dtmConexao.zcConexao);
  TAcaoAcesso.CriarAcoes(TfrmRelProduto, dtmConexao.zcConexao);
  TAcaoAcesso.CriarAcoes(TfrmRelCategoria, dtmConexao.zcConexao);
  TAcaoAcesso.CriarAcoes(TfrmUsuariosAcoes, dtmConexao.zcConexao);

  TAcaoAcesso.PreencherUsuariosVsAcoes(dtmConexao.zcConexao);
  frmAtualizaDB.Free;

  teclaEnter := TMREnter.Create(Self);
  teclaEnter.FocusEnabled := true;
  teclaEnter.FocusColor := clInfoBk;
end;

procedure TfrmPrincipal.FormShow(Sender: TObject);
begin
  try
    oUsuarioLogado := TUsuarioLogado.Create;
    frmLogin := TfrmLogin.Create(Self);
    frmLogin.ShowModal;
  finally
    frmLogin.Release;
    sbPrincipal.Panels[0].Text := 'Usuário: ' + oUsuarioLogado.nome;
  end;
end;

procedure TfrmPrincipal.menuFecharClick(Sender: TObject);
begin
  Application.Terminate;
end;

procedure TfrmPrincipal.Produtos1Click(Sender: TObject);
begin
  CriarForm(TfrmCadProduto);
end;

procedure TfrmPrincipal.Produtos2Click(Sender: TObject);
begin
  frmRelProduto := TfrmRelProduto.Create(Self);
  frmRelProduto.relPrincipal.PreviewModal;
  frmRelProduto.Release;
end;

procedure TfrmPrincipal.ProdutosporCategoria1Click(Sender: TObject);
begin
  frmRelProdutoPorCateg := TfrmRelProdutoPorCateg.Create(Self);
  frmRelProdutoPorCateg.relPrincipal.PreviewModal;
  frmRelProdutoPorCateg.Release;
end;

procedure TfrmPrincipal.Usurios1Click(Sender: TObject);
begin
  CriarForm(TfrmCadUsuario);
end;

procedure TfrmPrincipal.UsuriosXAes1Click(Sender: TObject);
begin
  CriarForm(TfrmUsuariosAcoes);
end;

procedure TfrmPrincipal.Vendas1Click(Sender: TObject);
begin
  CriarForm(TfrmProVenda);
end;

procedure TfrmPrincipal.VendasporData1Click(Sender: TObject);
begin
  Try
    frmSelecionarData := TfrmSelecionarData.Create(Self);
    frmSelecionarData.ShowModal;

    frmRelVendaPorData := TfrmRelVendaPorData.Create(Self);
    frmRelVendaPorData.qryVendas.Close;
    frmRelVendaPorData.qryVendas.ParamByName('DataInicial').AsDate := frmSelecionarData.dteDataInicial.Date;
    frmRelVendaPorData.qryVendas.ParamByName('DataFinal').AsDate := frmSelecionarData.dteDataFinal.Date;
    frmRelVendaPorData.qryVendas.Open;
    frmRelVendaPorData.relPrincipal.PreviewModal;
  Finally
    frmSelecionarData.Release;
    frmRelVendaPorData.Release;
  End;
end;

procedure TfrmPrincipal.AesdeAcesso1Click(Sender: TObject);
begin
  CriarForm(TfrmCadAcaoAcesso);
end;

procedure TfrmPrincipal.AlterarSenha1Click(Sender: TObject);
begin
  CriarForm(TfrmAlterarSenha);
end;

procedure TfrmPrincipal.AtualizacaoBancoDados(aForm: TfrmAtualizaDB);
var oAtualizarMSSQL: TAtualizaBancoDadosMSSQL;
begin
  try
    oAtualizarMSSQL := TAtualizaBancoDadosMSSQL.Create(dtmConexao.zcConexao);
    oAtualizarMSSQL.AtualizarBancoDeDadosMSSQL;
  finally
    if Assigned(oAtualizarMSSQL) then FreeAndNil(oAtualizarMSSQL);
  end;
end;

procedure TfrmPrincipal.CriarForm(nomeFormulario: TFormClass);
var formulario: TForm;
begin
  try
    formulario := nomeFormulario.Create(Application);

    if TfrmTelaHeranca.TenhoAcesso(oUsuarioLogado.codigo, formulario.Name, dtmConexao.zcConexao) then
      formulario.ShowModal
    else
    begin
      MessageDlg(
        'Usuário: ' + oUsuarioLogado.nome + ', não possui permissão de acesso!',
        mtWarning,
        [mbOK],
        0
      );
    end;
  finally
    if Assigned(formulario) then formulario.Release;
  end;
end;

end.
